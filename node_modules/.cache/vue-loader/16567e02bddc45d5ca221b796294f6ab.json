{"remainingRequest":"/Users/mazhongkai/Desktop/ebook/vue-ebook/node_modules/_vue-loader@15.9.7@vue-loader/lib/index.js??vue-loader-options!/Users/mazhongkai/Desktop/ebook/vue-ebook/src/components/ebook/EbookReader.vue?vue&type=style&index=0&id=594ecb70&lang=scss&rel=stylesheet%2Fscss&scoped=true&","dependencies":[{"path":"/Users/mazhongkai/Desktop/ebook/vue-ebook/src/components/ebook/EbookReader.vue","mtime":1579925468000},{"path":"/Users/mazhongkai/Desktop/ebook/vue-ebook/node_modules/_css-loader@1.0.1@css-loader/index.js","mtime":499162500000},{"path":"/Users/mazhongkai/Desktop/ebook/vue-ebook/node_modules/_vue-loader@15.9.7@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mazhongkai/Desktop/ebook/vue-ebook/node_modules/_sass-loader@7.3.1@sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mazhongkai/Desktop/ebook/vue-ebook/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mazhongkai/Desktop/ebook/vue-ebook/node_modules/_vue-loader@15.9.7@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICIuLi8uLi9hc3NldHMvc3R5bGVzL2dsb2JhbCI7CgouZWJvb2stcmVhZGVyIHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICAuZWJvb2stcmVhZGVyLW1hc2sgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgdG9wOiAwOwogICAgbGVmdDogMDsKICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OwogICAgei1pbmRleDogMTUwOwogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDEwMCU7CiAgfQp9Cg=="},{"version":3,"sources":["EbookReader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsRA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EbookReader.vue","sourceRoot":"src/components/ebook","sourcesContent":["<template>\n  <div class=\"ebook-reader\">\n    <div id=\"read\"></div>\n    <div class=\"ebook-reader-mask\"\n         @click=\"onMaskClick\"\n         @touchmove=\"move\"\n         @touchend=\"moveEnd\"\n         @mousedown.left=\"onMouseEnter\"\n         @mousemove.left=\"onMouseMove\"\n         @mouseup.left=\"onMouseEnd\"></div>\n  </div>\n</template>\n\n<script>\n  import { ebookMixin } from '../../utils/mixin'\n  import Epub from 'epubjs'\n  import {\n    getFontFamily,\n    saveFontFamily,\n    getFontSize,\n    saveFontSize,\n    getTheme,\n    saveTheme,\n    getLocation\n  } from '../../utils/localStorage'\n  import { flatten } from '../../utils/book'\n  import { getLocalForage } from '../../utils/localForage'\n\n  global.ePub = Epub\n  export default {\n    mixins: [ebookMixin],\n    methods: {\n      // 1 - 鼠标进入\n      // 2 - 鼠标进入后的移动\n      // 3 - 鼠标从移动状态松手\n      // 4 - 鼠标还原\n      onMouseEnd(e) {\n        if (this.mouseState === 2) {\n          this.setOffsetY(0)\n          this.firstOffsetY = null\n          this.mouseState = 3\n        } else {\n          this.mouseState = 4\n        }\n        const time = e.timeStamp - this.mouseStartTime\n        if (time < 100) {\n          this.mouseState = 4\n        }\n        e.preventDefault()\n        e.stopPropagation()\n      },\n      onMouseMove(e) {\n        if (this.mouseState === 1) {\n          this.mouseState = 2\n        } else if (this.mouseState === 2) {\n          let offsetY = 0\n          if (this.firstOffsetY) {\n            offsetY = e.clientY - this.firstOffsetY\n            this.setOffsetY(offsetY)\n          } else {\n            this.firstOffsetY = e.clientY\n          }\n        }\n        e.preventDefault()\n        e.stopPropagation()\n      },\n      onMouseEnter(e) {\n        this.mouseState = 1\n        this.mouseStartTime = e.timeStamp\n        e.preventDefault()\n        e.stopPropagation()\n      },\n      move(e) {\n        let offsetY = 0\n        if (this.firstOffsetY) {\n          offsetY = e.changedTouches[0].clientY - this.firstOffsetY\n          this.setOffsetY(offsetY)\n        } else {\n          this.firstOffsetY = e.changedTouches[0].clientY\n        }\n        e.preventDefault()\n        e.stopPropagation()\n      },\n      moveEnd(e) {\n        this.setOffsetY(0)\n        this.firstOffsetY = null\n      },\n      onMaskClick(e) {\n        if (this.mouseState && (this.mouseState === 2 || this.mouseState === 3)) {\n          return\n        }\n        const offsetX = e.offsetX\n        const width = window.innerWidth\n        if (offsetX > 0 && offsetX < width * 0.3) {\n          this.prevPage()\n        } else if (offsetX > 0 && offsetX > width * 0.7) {\n          this.nextPage()\n        } else {\n          this.toggleTitleAndMenu()\n        }\n      },\n      prevPage() {\n        if (this.rendition) {\n          this.rendition.prev().then(() => {\n            this.refreshLocation()\n          })\n          this.hideTitleAndMenu()\n        }\n      },\n      nextPage() {\n        if (this.rendition) {\n          this.rendition.next().then(() => {\n            this.refreshLocation()\n          })\n          this.hideTitleAndMenu()\n        }\n      },\n      toggleTitleAndMenu() {\n        if (this.menuVisible) {\n          this.setSettingVisible(-1)\n          this.setFontFamilyVisible(false)\n        }\n        this.setMenuVisible(!this.menuVisible)\n      },\n      initFontSize() {\n        let fontSize = getFontSize(this.fileName)\n        if (!fontSize) {\n          saveFontSize(this.fileName, this.defaultFontSize)\n        } else {\n          this.rendition.themes.fontSize(fontSize)\n          this.setDefaultFontSize(fontSize)\n        }\n      },\n      initFontFamily() {\n        let font = getFontFamily(this.fileName)\n        if (!font) {\n          saveFontFamily(this.fileName, this.defaultFontFamily)\n        } else {\n          this.rendition.themes.font(font)\n          this.setDefaultFontFamily(font)\n        }\n      },\n      initTheme() {\n        let defaultTheme = getTheme(this.fileName)\n        if (!defaultTheme) {\n          defaultTheme = this.themeList[0].name\n          saveTheme(this.fileName, defaultTheme)\n        }\n        this.setDefaultTheme(defaultTheme)\n        this.themeList.forEach(theme => {\n          this.rendition.themes.register(theme.name, theme.style)\n        })\n        this.rendition.themes.select(defaultTheme)\n      },\n      initRendition() {\n        this.rendition = this.book.renderTo('read', {\n          width: innerWidth,\n          height: innerHeight,\n          method: 'default'\n        })\n        const location = getLocation(this.fileName)\n        this.display(location, () => {\n          this.initTheme()\n          this.initFontSize()\n          this.initFontFamily()\n          this.initGlobalStyle()\n        })\n        this.rendition.hooks.content.register(contents => {\n          Promise.all([\n            contents.addStylesheet(`${process.env.VUE_APP_RES_URL}/fonts/daysOne.css`),\n            contents.addStylesheet(`${process.env.VUE_APP_RES_URL}/fonts/cabin.css`),\n            contents.addStylesheet(`${process.env.VUE_APP_RES_URL}/fonts/montserrat.css`),\n            contents.addStylesheet(`${process.env.VUE_APP_RES_URL}/fonts/tangerine.css`)\n          ]).then(() => {\n          })\n        })\n      },\n      initGesture() {\n        this.rendition.on('touchstart', event => {\n          this.touchStartX = event.changedTouches[0].clientX\n          this.touchStartTime = event.timeStamp\n        })\n        this.rendition.on('touchend', event => {\n          const offsetX = event.changedTouches[0].clientX - this.touchStartX\n          const time = event.timeStamp - this.touchStartTime\n          if (time < 500 && offsetX > 40) {\n            this.prevPage()\n          } else if (time < 500 && offsetX < -40) {\n            this.nextPage()\n          } else {\n            this.toggleTitleAndMenu()\n          }\n          event.preventDefault()\n          event.stopPropagation()\n        })\n      },\n      parseBook() {\n        this.book.loaded.cover.then(cover => {\n          this.book.archive.createUrl(cover).then(url => {\n            this.setCover(url)\n          })\n        })\n        this.book.loaded.metadata.then(metadata => {\n          this.setMetadata(metadata)\n        })\n        this.book.loaded.navigation.then(nav => {\n          const navItem = flatten(nav.toc)\n\n          function find(item, level = 0) {\n            return !item.parent ? level : find(navItem.filter(parentItem => parentItem.id === item.parent)[0], ++level)\n          }\n\n          navItem.forEach(item => {\n            item.level = find(item)\n          })\n          this.setNavigation(navItem)\n        })\n      },\n      initEpub(url) {\n        this.book = new Epub(url)\n        this.setCurrentBook(this.book)\n        this.initRendition()\n        // this.initGesture()\n        this.parseBook()\n        this.book.ready.then(() => {\n          return this.book.locations.generate(750 * (window.innerWidth / 375) * (getFontSize(this.fileName) / 16))\n        }).then(locations => {\n          this.navigation.forEach(nav => {\n            nav.pagelist = []\n          })\n          locations.forEach(item => {\n            const loc = item.match(/\\[(.*)\\]!/)[1]\n            this.navigation.forEach(nav => {\n              if (nav.href) {\n                const href = nav.href.match(/^(.*)\\.html$/)\n                if (href) {\n                  if (href[1] === loc) {\n                    nav.pagelist.push(item)\n                  }\n                }\n              }\n            })\n            let currentPage = 1\n            this.navigation.forEach((nav, index) => {\n              if (index === 0) {\n                nav.page = 1\n              } else {\n                nav.page = currentPage\n              }\n              currentPage += nav.pagelist.length + 1\n            })\n          })\n          this.setPagelist(locations)\n          this.setBookAvailable(true)\n          this.refreshLocation()\n        })\n      }\n    },\n    mounted() {\n      const books = this.$route.params.fileName.split('|')\n      const fileName = books[1]\n      getLocalForage(fileName, (err, blob) => {\n        if (!err && blob) {\n          this.setFileName(books.join('/')).then(() => {\n            this.initEpub(blob)\n          })\n        } else {\n          this.setFileName(books.join('/')).then(() => {\n            const url = process.env.VUE_APP_EPUB_URL + '/' + this.fileName + '.epub'\n            this.initEpub(url)\n          })\n        }\n      })\n    }\n  }\n</script>\n\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\n  @import \"../../assets/styles/global\";\n\n  .ebook-reader {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    .ebook-reader-mask {\n      position: absolute;\n      top: 0;\n      left: 0;\n      background: transparent;\n      z-index: 150;\n      width: 100%;\n      height: 100%;\n    }\n  }\n</style>\n"]}]}